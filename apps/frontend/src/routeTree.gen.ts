/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as landingPageIndexRouteImport } from './routes/(landing-page)/index'
import { Route as protectedAdminFurnituresRouteImport } from './routes/(protected)/admin/furnitures'
import { Route as landingPageMaterialsMaterialIdRouteImport } from './routes/(landing-page)/materials/$materialId'
import { Route as authAuthPathlessLayoutRouteImport } from './routes/(auth)/auth/_pathlessLayout'
import { Route as protectedAdminFurnituresAddRouteImport } from './routes/(protected)/admin/furnitures/add'
import { Route as authAuthPathlessLayoutRegisterRouteImport } from './routes/(auth)/auth/_pathlessLayout/register'
import { Route as authAuthPathlessLayoutLoginRouteImport } from './routes/(auth)/auth/_pathlessLayout/login'

const authAuthRouteImport = createFileRoute('/(auth)/auth')()

const authAuthRoute = authAuthRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const landingPageIndexRoute = landingPageIndexRouteImport.update({
  id: '/(landing-page)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedAdminFurnituresRoute =
  protectedAdminFurnituresRouteImport.update({
    id: '/(protected)/admin/furnitures',
    path: '/admin/furnitures',
    getParentRoute: () => rootRouteImport,
  } as any)
const landingPageMaterialsMaterialIdRoute =
  landingPageMaterialsMaterialIdRouteImport.update({
    id: '/(landing-page)/materials/$materialId',
    path: '/materials/$materialId',
    getParentRoute: () => rootRouteImport,
  } as any)
const authAuthPathlessLayoutRoute = authAuthPathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => authAuthRoute,
} as any)
const protectedAdminFurnituresAddRoute =
  protectedAdminFurnituresAddRouteImport.update({
    id: '/add',
    path: '/add',
    getParentRoute: () => protectedAdminFurnituresRoute,
  } as any)
const authAuthPathlessLayoutRegisterRoute =
  authAuthPathlessLayoutRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => authAuthPathlessLayoutRoute,
  } as any)
const authAuthPathlessLayoutLoginRoute =
  authAuthPathlessLayoutLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authAuthPathlessLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof landingPageIndexRoute
  '/auth': typeof authAuthPathlessLayoutRouteWithChildren
  '/materials/$materialId': typeof landingPageMaterialsMaterialIdRoute
  '/admin/furnitures': typeof protectedAdminFurnituresRouteWithChildren
  '/auth/login': typeof authAuthPathlessLayoutLoginRoute
  '/auth/register': typeof authAuthPathlessLayoutRegisterRoute
  '/admin/furnitures/add': typeof protectedAdminFurnituresAddRoute
}
export interface FileRoutesByTo {
  '/': typeof landingPageIndexRoute
  '/auth': typeof authAuthPathlessLayoutRouteWithChildren
  '/materials/$materialId': typeof landingPageMaterialsMaterialIdRoute
  '/admin/furnitures': typeof protectedAdminFurnituresRouteWithChildren
  '/auth/login': typeof authAuthPathlessLayoutLoginRoute
  '/auth/register': typeof authAuthPathlessLayoutRegisterRoute
  '/admin/furnitures/add': typeof protectedAdminFurnituresAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(landing-page)/': typeof landingPageIndexRoute
  '/(auth)/auth': typeof authAuthRouteWithChildren
  '/(auth)/auth/_pathlessLayout': typeof authAuthPathlessLayoutRouteWithChildren
  '/(landing-page)/materials/$materialId': typeof landingPageMaterialsMaterialIdRoute
  '/(protected)/admin/furnitures': typeof protectedAdminFurnituresRouteWithChildren
  '/(auth)/auth/_pathlessLayout/login': typeof authAuthPathlessLayoutLoginRoute
  '/(auth)/auth/_pathlessLayout/register': typeof authAuthPathlessLayoutRegisterRoute
  '/(protected)/admin/furnitures/add': typeof protectedAdminFurnituresAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/materials/$materialId'
    | '/admin/furnitures'
    | '/auth/login'
    | '/auth/register'
    | '/admin/furnitures/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/materials/$materialId'
    | '/admin/furnitures'
    | '/auth/login'
    | '/auth/register'
    | '/admin/furnitures/add'
  id:
    | '__root__'
    | '/(landing-page)/'
    | '/(auth)/auth'
    | '/(auth)/auth/_pathlessLayout'
    | '/(landing-page)/materials/$materialId'
    | '/(protected)/admin/furnitures'
    | '/(auth)/auth/_pathlessLayout/login'
    | '/(auth)/auth/_pathlessLayout/register'
    | '/(protected)/admin/furnitures/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  landingPageIndexRoute: typeof landingPageIndexRoute
  authAuthRoute: typeof authAuthRouteWithChildren
  landingPageMaterialsMaterialIdRoute: typeof landingPageMaterialsMaterialIdRoute
  protectedAdminFurnituresRoute: typeof protectedAdminFurnituresRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing-page)/': {
      id: '/(landing-page)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/admin/furnitures': {
      id: '/(protected)/admin/furnitures'
      path: '/admin/furnitures'
      fullPath: '/admin/furnitures'
      preLoaderRoute: typeof protectedAdminFurnituresRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing-page)/materials/$materialId': {
      id: '/(landing-page)/materials/$materialId'
      path: '/materials/$materialId'
      fullPath: '/materials/$materialId'
      preLoaderRoute: typeof landingPageMaterialsMaterialIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth/_pathlessLayout': {
      id: '/(auth)/auth/_pathlessLayout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthPathlessLayoutRouteImport
      parentRoute: typeof authAuthRoute
    }
    '/(protected)/admin/furnitures/add': {
      id: '/(protected)/admin/furnitures/add'
      path: '/add'
      fullPath: '/admin/furnitures/add'
      preLoaderRoute: typeof protectedAdminFurnituresAddRouteImport
      parentRoute: typeof protectedAdminFurnituresRoute
    }
    '/(auth)/auth/_pathlessLayout/register': {
      id: '/(auth)/auth/_pathlessLayout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof authAuthPathlessLayoutRegisterRouteImport
      parentRoute: typeof authAuthPathlessLayoutRoute
    }
    '/(auth)/auth/_pathlessLayout/login': {
      id: '/(auth)/auth/_pathlessLayout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof authAuthPathlessLayoutLoginRouteImport
      parentRoute: typeof authAuthPathlessLayoutRoute
    }
  }
}

interface authAuthPathlessLayoutRouteChildren {
  authAuthPathlessLayoutLoginRoute: typeof authAuthPathlessLayoutLoginRoute
  authAuthPathlessLayoutRegisterRoute: typeof authAuthPathlessLayoutRegisterRoute
}

const authAuthPathlessLayoutRouteChildren: authAuthPathlessLayoutRouteChildren =
  {
    authAuthPathlessLayoutLoginRoute: authAuthPathlessLayoutLoginRoute,
    authAuthPathlessLayoutRegisterRoute: authAuthPathlessLayoutRegisterRoute,
  }

const authAuthPathlessLayoutRouteWithChildren =
  authAuthPathlessLayoutRoute._addFileChildren(
    authAuthPathlessLayoutRouteChildren,
  )

interface authAuthRouteChildren {
  authAuthPathlessLayoutRoute: typeof authAuthPathlessLayoutRouteWithChildren
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthPathlessLayoutRoute: authAuthPathlessLayoutRouteWithChildren,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface protectedAdminFurnituresRouteChildren {
  protectedAdminFurnituresAddRoute: typeof protectedAdminFurnituresAddRoute
}

const protectedAdminFurnituresRouteChildren: protectedAdminFurnituresRouteChildren =
  {
    protectedAdminFurnituresAddRoute: protectedAdminFurnituresAddRoute,
  }

const protectedAdminFurnituresRouteWithChildren =
  protectedAdminFurnituresRoute._addFileChildren(
    protectedAdminFurnituresRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  landingPageIndexRoute: landingPageIndexRoute,
  authAuthRoute: authAuthRouteWithChildren,
  landingPageMaterialsMaterialIdRoute: landingPageMaterialsMaterialIdRoute,
  protectedAdminFurnituresRoute: protectedAdminFurnituresRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
